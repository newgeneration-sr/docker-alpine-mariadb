#!/usr/bin/with-contenv sh

DISABLE=$(cat /tmp/backup.disable)
if [ "$DISABLE" = "1" ];
then
    exit 0
fi
TMP_PATH=/root/
PERSIT_PATH=/var/lib/mysql-backup/
DATE=$(date +%H)

partdumps(){
    echo "> "$DB_NAME
    ERROR=0
    mkdir -p $TMP_PATH/$DB_NAME-$DATE/
    tables=$(mysql -NBA -u root -p$ROOT_PASSWORD -D $DB_NAME -e 'show tables')
    for tab in $tables;
    do
        echo -n "   > $tab"
        mysqldump -uroot -p$ROOT_PASSWORD $DB_NAME $tab > $TMP_PATH/$DB_NAME-$DATE/$tab.sql
        if [ "$?" -eq 0 ]
        then
            echo " ........ OK"
        else
            echo " !!!!!!!! NOK"
            ERROR=1
            echo $tab >> $TMP_PATH/$DB_NAME-$DATE/status.log
            sleep 15
        fi
    done
    
    echo $ERROR  > $TMP_PATH/$DB_NAME-$DATE/status
    
}

fulldump(){
    echo -n "> "$DB_NAME
    ERROR=0
    mysqldump -uroot -p$ROOT_PASSWORD $DB_NAME > $TMP_PATH/$DB_NAME.sql
    if [ "$?" -eq 0 ]
    then
        echo " ........ OK"
    else
        echo " !!!!!!!! NOK"
        ERROR=1
    fi
    echo $ERROR  > $TMP_PATH/$DB_NAME.status
    
}

processfull(){
    fulldump
    if [ "$(cat $TMP_PATH/$DB_NAME.status)" = "0" ];
    then
        mv $PERSIT_PATH/$DB_NAME.sql.3 $PERSIT_PATH/$DB_NAME.sql.4 > /dev/null 2>&1
        mv $PERSIT_PATH/$DB_NAME.sql.2 $PERSIT_PATH/$DB_NAME.sql.3 > /dev/null 2>&1
        mv $PERSIT_PATH/$DB_NAME.sql.1 $PERSIT_PATH/$DB_NAME.sql.2 > /dev/null 2>&1
        mv $PERSIT_PATH/$DB_NAME.sql $PERSIT_PATH/$DB_NAME.sql.1 > /dev/null 2>&1
        mv $TMP_PATH/$DB_NAME.sql $PERSIT_PATH/$DB_NAME.sql > /dev/null 2>&1
        mv $TMP_PATH/$DB_NAME.sql.status $PERSIT_PATH/$DB_NAME.sql.status > /dev/null 2>&1
    else
        rm $TMP_PATH/$DB_NAME.sql
        rm $TMP_PATH/$DB_NAME.sql.status
    fi
}

processpart(){
    partdumps
    if [ "$(cat $TMP_PATH/$DB_NAME-$DATE/status)" = "0" ];
    then
        rm -r $PERSIT_PATH/$DB_NAME-*
        mv $TMP_PATH/$DB_NAME-$DATE $PERSIT_PATH/$DB_NAME-$DATE
    else
        rm -r $TMP_PATH/$DB_NAME-$DATE
    fi
}


next(){
    echo "> Get Next Site"
    COUNTER=$(($COUNTER + 1))
}

is_db_enabled(){
    NAME="DB_"$COUNTER"_NAME"
    DB_NAME=$(eval 'echo $'$NAME)
    if [ -z "$DB_NAME" ];
    then
        return 1
    fi
    
    return 0
}

COUNTER=0
while [ 1 -eq 1 ];
do
    if ! is_db_enabled;
    then
        break
    fi
    if [ "$1" = "parial" ];
    then
        processpart
    else
        processfull
    fi
    next
done